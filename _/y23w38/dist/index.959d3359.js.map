{"mappings":"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","sources":["<anon>","app/essence-free-ud/js/jquery.vide.js"],"sourcesContent":["/*\n *  Vide - v0.5.1\n *  Easy as hell jQuery plugin for video backgrounds.\n *  http://vodkabears.github.io/vide/\n *\n *  Made by Ilya Makarov\n *  Under MIT License\n */ !function(root, factory) {\n    if (typeof define === \"function\" && define.amd) define([\n        \"jquery\"\n    ], factory);\n    else factory(root.jQuery);\n}(this, function($) {\n    \"use strict\";\n    /**\n   * Name of the plugin\n   * @private\n   * @const\n   * @type {String}\n   */ var PLUGIN_NAME = \"vide\";\n    /**\n   * Default settings\n   * @private\n   * @const\n   * @type {Object}\n   */ var DEFAULTS = {\n        volume: 1,\n        playbackRate: 1,\n        muted: true,\n        loop: true,\n        autoplay: true,\n        position: \"50% 50%\",\n        posterType: \"detect\",\n        resizing: true,\n        bgColor: \"transparent\",\n        className: \"\"\n    };\n    /**\n   * Not implemented error message\n   * @private\n   * @const\n   * @type {String}\n   */ var NOT_IMPLEMENTED_MSG = \"Not implemented\";\n    /**\n   * Parse a string with options\n   * @private\n   * @param {String} str\n   * @returns {Object|String}\n   */ function parseOptions(str) {\n        var obj = {};\n        var delimiterIndex;\n        var option;\n        var prop;\n        var val;\n        var arr;\n        var len;\n        var i;\n        // Remove spaces around delimiters and split\n        arr = str.replace(/\\s*:\\s*/g, \":\").replace(/\\s*,\\s*/g, \",\").split(\",\");\n        // Parse a string\n        for(i = 0, len = arr.length; i < len; i++){\n            option = arr[i];\n            // Ignore urls and a string without colon delimiters\n            if (option.search(/^(http|https|ftp):\\/\\//) !== -1 || option.search(\":\") === -1) break;\n            delimiterIndex = option.indexOf(\":\");\n            prop = option.substring(0, delimiterIndex);\n            val = option.substring(delimiterIndex + 1);\n            // If val is an empty string, make it undefined\n            if (!val) val = undefined;\n            // Convert a string value if it is like a boolean\n            if (typeof val === \"string\") val = val === \"true\" || (val === \"false\" ? false : val);\n            // Convert a string value if it is like a number\n            if (typeof val === \"string\") val = !isNaN(val) ? +val : val;\n            obj[prop] = val;\n        }\n        // If nothing is parsed\n        if (prop == null && val == null) return str;\n        return obj;\n    }\n    /**\n   * Parse a position option\n   * @private\n   * @param {String} str\n   * @returns {Object}\n   */ function parsePosition(str) {\n        str = \"\" + str;\n        // Default value is a center\n        var args = str.split(/\\s+/);\n        var x = \"50%\";\n        var y = \"50%\";\n        var len;\n        var arg;\n        var i;\n        for(i = 0, len = args.length; i < len; i++){\n            arg = args[i];\n            // Convert values\n            if (arg === \"left\") x = \"0%\";\n            else if (arg === \"right\") x = \"100%\";\n            else if (arg === \"top\") y = \"0%\";\n            else if (arg === \"bottom\") y = \"100%\";\n            else if (arg === \"center\") {\n                if (i === 0) x = \"50%\";\n                else y = \"50%\";\n            } else if (i === 0) x = arg;\n            else y = arg;\n        }\n        return {\n            x: x,\n            y: y\n        };\n    }\n    /**\n   * Search a poster\n   * @private\n   * @param {String} path\n   * @param {Function} callback\n   */ function findPoster(path, callback) {\n        var onLoad = function() {\n            callback(this.src);\n        };\n    }\n    /**\n   * Vide constructor\n   * @param {HTMLElement} element\n   * @param {Object|String} path\n   * @param {Object|String} options\n   * @constructor\n   */ function Vide(element, path, options) {\n        this.$element = $(element);\n        // Parse path\n        if (typeof path === \"string\") path = parseOptions(path);\n        // Parse options\n        if (!options) options = {};\n        else if (typeof options === \"string\") options = parseOptions(options);\n        // Remove an extension\n        if (typeof path === \"string\") path = path.replace(/\\.\\w*$/, \"\");\n        else if (typeof path === \"object\") {\n            for(var i in path)if (path.hasOwnProperty(i)) path[i] = path[i].replace(/\\.\\w*$/, \"\");\n        }\n        this.settings = $.extend({}, DEFAULTS, options);\n        this.path = path;\n        // https://github.com/VodkaBears/Vide/issues/110\n        try {\n            this.init();\n        } catch (e) {\n            if (e.message !== NOT_IMPLEMENTED_MSG) throw e;\n        }\n    }\n    /**\n   * Initialization\n   * @public\n   */ Vide.prototype.init = function() {\n        var vide = this;\n        var path = vide.path;\n        var poster = path;\n        var sources = \"\";\n        var $element = vide.$element;\n        var settings = vide.settings;\n        var position = parsePosition(settings.position);\n        var posterType = settings.posterType;\n        var $video;\n        var $wrapper;\n        // Set styles of a video wrapper\n        $wrapper = vide.$wrapper = $(\"<div>\").addClass(settings.className).css({\n            position: \"absolute\",\n            \"z-index\": -1,\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            overflow: \"hidden\",\n            \"-webkit-background-size\": \"cover\",\n            \"-moz-background-size\": \"cover\",\n            \"-o-background-size\": \"cover\",\n            \"background-size\": \"cover\",\n            \"background-color\": settings.bgColor,\n            \"background-repeat\": \"no-repeat\",\n            \"background-position\": position.x + \" \" + position.y\n        });\n        // Get a poster path\n        if (typeof path === \"object\") {\n            if (path.poster) poster = path.poster;\n            else {\n                if (path.mp4) poster = path.mp4;\n                else if (path.webm) poster = path.webm;\n                else if (path.ogv) poster = path.ogv;\n            }\n        }\n        // Set a video poster\n        if (posterType === \"detect\") findPoster(poster, function(url) {\n            $wrapper.css(\"background-image\", \"url(\" + url + \")\");\n        });\n        else if (posterType !== \"none\") $wrapper.css(\"background-image\", \"url(\" + poster + \".\" + posterType + \")\");\n        // If a parent element has a static position, make it relative\n        if ($element.css(\"position\") === \"static\") $element.css(\"position\", \"static\");\n        $element.prepend($wrapper);\n        if (typeof path === \"object\") {\n            if (path.mp4) sources += '<source src=\"' + path.mp4 + '.mp4\" type=\"video/mp4\">';\n            if (path.webm) sources += '<source src=\"' + path.webm + '.webm\" type=\"video/webm\">';\n            if (path.ogv) sources += '<source src=\"' + path.ogv + '.ogv\" type=\"video/ogg\">';\n            $video = vide.$video = $(\"<video>\" + sources + \"</video>\");\n        } else $video = vide.$video = $('<video><source src=\"' + path + '.mp4\" type=\"video/mp4\">' + '<source src=\"' + path + '.webm\" type=\"video/webm\">' + '<source src=\"' + path + '.ogv\" type=\"video/ogg\">' + \"</video>\");\n        // https://github.com/VodkaBears/Vide/issues/110\n        try {\n            $video// Set video properties\n            .prop({\n                autoplay: settings.autoplay,\n                loop: settings.loop,\n                volume: settings.volume,\n                muted: settings.muted,\n                defaultMuted: settings.muted,\n                playbackRate: settings.playbackRate,\n                defaultPlaybackRate: settings.playbackRate\n            });\n        } catch (e) {\n            throw new Error(NOT_IMPLEMENTED_MSG);\n        }\n        // Video alignment\n        $video.css({\n            margin: \"auto\",\n            position: \"absolute\",\n            \"z-index\": -1,\n            top: position.y,\n            left: position.x,\n            \"-webkit-transform\": \"translate(-\" + position.x + \", -\" + position.y + \")\",\n            \"-ms-transform\": \"translate(-\" + position.x + \", -\" + position.y + \")\",\n            \"-moz-transform\": \"translate(-\" + position.x + \", -\" + position.y + \")\",\n            transform: \"translate(-\" + position.x + \", -\" + position.y + \")\",\n            // Disable visibility, while loading\n            visibility: \"hidden\",\n            opacity: 0\n        })// Resize a video, when it's loaded\n        .one(\"canplaythrough.\" + PLUGIN_NAME, function() {\n            vide.resize();\n        })// Make it visible, when it's already playing\n        .one(\"playing.\" + PLUGIN_NAME, function() {\n            $video.css({\n                visibility: \"visible\",\n                opacity: 1\n            });\n            $wrapper.css(\"background-image\", \"none\");\n        });\n        // Resize event is available only for 'window'\n        // Use another code solutions to detect DOM elements resizing\n        $element.on(\"resize.\" + PLUGIN_NAME, function() {\n            if (settings.resizing) vide.resize();\n        });\n        // Append a video\n        $wrapper.append($video);\n    };\n    /**\n   * Get a video element\n   * @public\n   * @returns {HTMLVideoElement}\n   */ Vide.prototype.getVideoObject = function() {\n        return this.$video[0];\n    };\n    /**\n   * Resize a video background\n   * @public\n   */ Vide.prototype.resize = function() {\n        if (!this.$video) return;\n        var $wrapper = this.$wrapper;\n        var $video = this.$video;\n        var video = $video[0];\n        // Get a native video size\n        var videoHeight = video.videoHeight;\n        var videoWidth = video.videoWidth;\n        // Get a wrapper size\n        var wrapperHeight = $wrapper.height();\n        var wrapperWidth = $wrapper.width();\n        if (wrapperWidth / videoWidth > wrapperHeight / videoHeight) $video.css({\n            // +2 pixels to prevent an empty space after transformation\n            width: wrapperWidth + 2,\n            height: \"auto\"\n        });\n        else $video.css({\n            width: \"auto\",\n            // +2 pixels to prevent an empty space after transformation\n            height: wrapperHeight + 2\n        });\n    };\n    /**\n   * Destroy a video background\n   * @public\n   */ Vide.prototype.destroy = function() {\n        delete $[PLUGIN_NAME].lookup[this.index];\n        this.$video && this.$video.off(PLUGIN_NAME);\n        this.$element.off(PLUGIN_NAME).removeData(PLUGIN_NAME);\n        this.$wrapper.remove();\n    };\n    /**\n   * Special plugin object for instances.\n   * @public\n   * @type {Object}\n   */ $[PLUGIN_NAME] = {\n        lookup: []\n    };\n    /**\n   * Plugin constructor\n   * @param {Object|String} path\n   * @param {Object|String} options\n   * @returns {JQuery}\n   * @constructor\n   */ $.fn[PLUGIN_NAME] = function(path, options) {\n        var instance;\n        this.each(function() {\n            instance = $.data(this, PLUGIN_NAME);\n            // Destroy the plugin instance if exists\n            instance && instance.destroy();\n            // Create the plugin instance\n            instance = new Vide(this, path, options);\n            instance.index = $[PLUGIN_NAME].lookup.push(instance) - 1;\n            $.data(this, PLUGIN_NAME, instance);\n        });\n        return this;\n    };\n    $(document).ready(function() {\n        var $window = $(window);\n        // Window resize event listener\n        $window.on(\"resize.\" + PLUGIN_NAME, function() {\n            for(var len = $[PLUGIN_NAME].lookup.length, i = 0, instance; i < len; i++){\n                instance = $[PLUGIN_NAME].lookup[i];\n                if (instance && instance.settings.resizing) instance.resize();\n            }\n        });\n        // https://github.com/VodkaBears/Vide/issues/68\n        $window.on(\"unload.\" + PLUGIN_NAME, function() {\n            return false;\n        });\n        // Auto initialization\n        // Add 'data-vide-bg' attribute with a path to the video without extension\n        // Also you can pass options throw the 'data-vide-options' attribute\n        // 'data-vide-options' must be like 'muted: false, volume: 0.5'\n        $(document).find(\"[data-\" + PLUGIN_NAME + \"-bg]\").each(function(i, element) {\n            var $element = $(element);\n            var options = $element.data(PLUGIN_NAME + \"-options\");\n            var path = $element.data(PLUGIN_NAME + \"-bg\");\n            $element[PLUGIN_NAME](path, options);\n        });\n    });\n});\n\n//# sourceMappingURL=index.959d3359.js.map\n","/*\n *  Vide - v0.5.1\n *  Easy as hell jQuery plugin for video backgrounds.\n *  http://vodkabears.github.io/vide/\n *\n *  Made by Ilya Makarov\n *  Under MIT License\n */\n!(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  }  else {\n    factory(root.jQuery);\n  }\n})(this, function($) {\n\n  'use strict';\n\n  /**\n   * Name of the plugin\n   * @private\n   * @const\n   * @type {String}\n   */\n  var PLUGIN_NAME = 'vide';\n\n  /**\n   * Default settings\n   * @private\n   * @const\n   * @type {Object}\n   */\n  var DEFAULTS = {\n    volume: 1,\n    playbackRate: 1,\n    muted: true,\n    loop: true,\n    autoplay: true,\n    position: '50% 50%',\n    posterType: 'detect',\n    resizing: true,\n    bgColor: 'transparent',\n    className: ''\n  };\n\n  /**\n   * Not implemented error message\n   * @private\n   * @const\n   * @type {String}\n   */\n  var NOT_IMPLEMENTED_MSG = 'Not implemented';\n\n  /**\n   * Parse a string with options\n   * @private\n   * @param {String} str\n   * @returns {Object|String}\n   */\n  function parseOptions(str) {\n    var obj = {};\n    var delimiterIndex;\n    var option;\n    var prop;\n    var val;\n    var arr;\n    var len;\n    var i;\n\n    // Remove spaces around delimiters and split\n    arr = str.replace(/\\s*:\\s*/g, ':').replace(/\\s*,\\s*/g, ',').split(',');\n\n    // Parse a string\n    for (i = 0, len = arr.length; i < len; i++) {\n      option = arr[i];\n\n      // Ignore urls and a string without colon delimiters\n      if (\n        option.search(/^(http|https|ftp):\\/\\//) !== -1 ||\n        option.search(':') === -1\n      ) {\n        break;\n      }\n\n      delimiterIndex = option.indexOf(':');\n      prop = option.substring(0, delimiterIndex);\n      val = option.substring(delimiterIndex + 1);\n\n      // If val is an empty string, make it undefined\n      if (!val) {\n        val = undefined;\n      }\n\n      // Convert a string value if it is like a boolean\n      if (typeof val === 'string') {\n        val = val === 'true' || (val === 'false' ? false : val);\n      }\n\n      // Convert a string value if it is like a number\n      if (typeof val === 'string') {\n        val = !isNaN(val) ? +val : val;\n      }\n\n      obj[prop] = val;\n    }\n\n    // If nothing is parsed\n    if (prop == null && val == null) {\n      return str;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Parse a position option\n   * @private\n   * @param {String} str\n   * @returns {Object}\n   */\n  function parsePosition(str) {\n    str = '' + str;\n\n    // Default value is a center\n    var args = str.split(/\\s+/);\n    var x = '50%';\n    var y = '50%';\n    var len;\n    var arg;\n    var i;\n\n    for (i = 0, len = args.length; i < len; i++) {\n      arg = args[i];\n\n      // Convert values\n      if (arg === 'left') {\n        x = '0%';\n      } else if (arg === 'right') {\n        x = '100%';\n      } else if (arg === 'top') {\n        y = '0%';\n      } else if (arg === 'bottom') {\n        y = '100%';\n      } else if (arg === 'center') {\n        if (i === 0) {\n          x = '50%';\n        } else {\n          y = '50%';\n        }\n      } else {\n        if (i === 0) {\n          x = arg;\n        } else {\n          y = arg;\n        }\n      }\n    }\n\n    return { x: x, y: y };\n  }\n\n  /**\n   * Search a poster\n   * @private\n   * @param {String} path\n   * @param {Function} callback\n   */\n  function findPoster(path, callback) {\n    var onLoad = function() {\n      callback(this.src);\n    };\n\n  }\n\n  /**\n   * Vide constructor\n   * @param {HTMLElement} element\n   * @param {Object|String} path\n   * @param {Object|String} options\n   * @constructor\n   */\n  function Vide(element, path, options) {\n    this.$element = $(element);\n\n    // Parse path\n    if (typeof path === 'string') {\n      path = parseOptions(path);\n    }\n\n    // Parse options\n    if (!options) {\n      options = {};\n    } else if (typeof options === 'string') {\n      options = parseOptions(options);\n    }\n\n    // Remove an extension\n    if (typeof path === 'string') {\n      path = path.replace(/\\.\\w*$/, '');\n    } else if (typeof path === 'object') {\n      for (var i in path) {\n        if (path.hasOwnProperty(i)) {\n          path[i] = path[i].replace(/\\.\\w*$/, '');\n        }\n      }\n    }\n\n    this.settings = $.extend({}, DEFAULTS, options);\n    this.path = path;\n\n    // https://github.com/VodkaBears/Vide/issues/110\n    try {\n      this.init();\n    } catch (e) {\n      if (e.message !== NOT_IMPLEMENTED_MSG) {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Initialization\n   * @public\n   */\n  Vide.prototype.init = function() {\n    var vide = this;\n    var path = vide.path;\n    var poster = path;\n    var sources = '';\n    var $element = vide.$element;\n    var settings = vide.settings;\n    var position = parsePosition(settings.position);\n    var posterType = settings.posterType;\n    var $video;\n    var $wrapper;\n\n    // Set styles of a video wrapper\n    $wrapper = vide.$wrapper = $('<div>')\n      .addClass(settings.className)\n      .css({\n        position: 'absolute',\n        'z-index': -1,\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        overflow: 'hidden',\n        '-webkit-background-size': 'cover',\n        '-moz-background-size': 'cover',\n        '-o-background-size': 'cover',\n        'background-size': 'cover',\n        'background-color': settings.bgColor,\n        'background-repeat': 'no-repeat',\n        'background-position': position.x + ' ' + position.y\n      });\n\n    // Get a poster path\n    if (typeof path === 'object') {\n      if (path.poster) {\n        poster = path.poster;\n      } else {\n        if (path.mp4) {\n          poster = path.mp4;\n        } else if (path.webm) {\n          poster = path.webm;\n        } else if (path.ogv) {\n          poster = path.ogv;\n        }\n      }\n    }\n\n    // Set a video poster\n    if (posterType === 'detect') {\n      findPoster(poster, function(url) {\n        $wrapper.css('background-image', 'url(' + url + ')');\n      });\n    } else if (posterType !== 'none') {\n      $wrapper.css('background-image', 'url(' + poster + '.' + posterType + ')');\n    }\n\n    // If a parent element has a static position, make it relative\n    if ($element.css('position') === 'static') {\n      $element.css('position', 'static');\n    }\n\n    $element.prepend($wrapper);\n\n    if (typeof path === 'object') {\n      if (path.mp4) {\n        sources += '<source src=\"' + path.mp4 + '.mp4\" type=\"video/mp4\">';\n      }\n\n      if (path.webm) {\n        sources += '<source src=\"' + path.webm + '.webm\" type=\"video/webm\">';\n      }\n\n      if (path.ogv) {\n        sources += '<source src=\"' + path.ogv + '.ogv\" type=\"video/ogg\">';\n      }\n\n      $video = vide.$video = $('<video>' + sources + '</video>');\n    } else {\n      $video = vide.$video = $('<video>' +\n        '<source src=\"' + path + '.mp4\" type=\"video/mp4\">' +\n        '<source src=\"' + path + '.webm\" type=\"video/webm\">' +\n        '<source src=\"' + path + '.ogv\" type=\"video/ogg\">' +\n        '</video>');\n    }\n\n    // https://github.com/VodkaBears/Vide/issues/110\n    try {\n      $video\n\n        // Set video properties\n        .prop({\n          autoplay: settings.autoplay,\n          loop: settings.loop,\n          volume: settings.volume,\n          muted: settings.muted,\n          defaultMuted: settings.muted,\n          playbackRate: settings.playbackRate,\n          defaultPlaybackRate: settings.playbackRate\n        });\n    } catch (e) {\n      throw new Error(NOT_IMPLEMENTED_MSG);\n    }\n\n    // Video alignment\n    $video.css({\n      margin: 'auto',\n      position: 'absolute',\n      'z-index': -1,\n      top: position.y,\n      left: position.x,\n      '-webkit-transform': 'translate(-' + position.x + ', -' + position.y + ')',\n      '-ms-transform': 'translate(-' + position.x + ', -' + position.y + ')',\n      '-moz-transform': 'translate(-' + position.x + ', -' + position.y + ')',\n      transform: 'translate(-' + position.x + ', -' + position.y + ')',\n\n      // Disable visibility, while loading\n      visibility: 'hidden',\n      opacity: 0\n    })\n\n    // Resize a video, when it's loaded\n    .one('canplaythrough.' + PLUGIN_NAME, function() {\n      vide.resize();\n    })\n\n    // Make it visible, when it's already playing\n    .one('playing.' + PLUGIN_NAME, function() {\n      $video.css({\n        visibility: 'visible',\n        opacity: 1\n      });\n      $wrapper.css('background-image', 'none');\n    });\n\n    // Resize event is available only for 'window'\n    // Use another code solutions to detect DOM elements resizing\n    $element.on('resize.' + PLUGIN_NAME, function() {\n      if (settings.resizing) {\n        vide.resize();\n      }\n    });\n\n    // Append a video\n    $wrapper.append($video);\n  };\n\n  /**\n   * Get a video element\n   * @public\n   * @returns {HTMLVideoElement}\n   */\n  Vide.prototype.getVideoObject = function() {\n    return this.$video[0];\n  };\n\n  /**\n   * Resize a video background\n   * @public\n   */\n  Vide.prototype.resize = function() {\n    if (!this.$video) {\n      return;\n    }\n\n    var $wrapper = this.$wrapper;\n    var $video = this.$video;\n    var video = $video[0];\n\n    // Get a native video size\n    var videoHeight = video.videoHeight;\n    var videoWidth = video.videoWidth;\n\n    // Get a wrapper size\n    var wrapperHeight = $wrapper.height();\n    var wrapperWidth = $wrapper.width();\n\n    if (wrapperWidth / videoWidth > wrapperHeight / videoHeight) {\n      $video.css({\n\n        // +2 pixels to prevent an empty space after transformation\n        width: wrapperWidth + 2,\n        height: 'auto'\n      });\n    } else {\n      $video.css({\n        width: 'auto',\n\n        // +2 pixels to prevent an empty space after transformation\n        height: wrapperHeight + 2\n      });\n    }\n  };\n\n  /**\n   * Destroy a video background\n   * @public\n   */\n  Vide.prototype.destroy = function() {\n    delete $[PLUGIN_NAME].lookup[this.index];\n    this.$video && this.$video.off(PLUGIN_NAME);\n    this.$element.off(PLUGIN_NAME).removeData(PLUGIN_NAME);\n    this.$wrapper.remove();\n  };\n\n  /**\n   * Special plugin object for instances.\n   * @public\n   * @type {Object}\n   */\n  $[PLUGIN_NAME] = {\n    lookup: []\n  };\n\n  /**\n   * Plugin constructor\n   * @param {Object|String} path\n   * @param {Object|String} options\n   * @returns {JQuery}\n   * @constructor\n   */\n  $.fn[PLUGIN_NAME] = function(path, options) {\n    var instance;\n\n    this.each(function() {\n      instance = $.data(this, PLUGIN_NAME);\n\n      // Destroy the plugin instance if exists\n      instance && instance.destroy();\n\n      // Create the plugin instance\n      instance = new Vide(this, path, options);\n      instance.index = $[PLUGIN_NAME].lookup.push(instance) - 1;\n      $.data(this, PLUGIN_NAME, instance);\n    });\n\n    return this;\n  };\n\n  $(document).ready(function() {\n    var $window = $(window);\n\n    // Window resize event listener\n    $window.on('resize.' + PLUGIN_NAME, function() {\n      for (var len = $[PLUGIN_NAME].lookup.length, i = 0, instance; i < len; i++) {\n        instance = $[PLUGIN_NAME].lookup[i];\n\n        if (instance && instance.settings.resizing) {\n          instance.resize();\n        }\n      }\n    });\n\n    // https://github.com/VodkaBears/Vide/issues/68\n    $window.on('unload.' + PLUGIN_NAME, function() {\n      return false;\n    });\n\n    // Auto initialization\n    // Add 'data-vide-bg' attribute with a path to the video without extension\n    // Also you can pass options throw the 'data-vide-options' attribute\n    // 'data-vide-options' must be like 'muted: false, volume: 0.5'\n    $(document).find('[data-' + PLUGIN_NAME + '-bg]').each(function(i, element) {\n      var $element = $(element);\n      var options = $element.data(PLUGIN_NAME + '-options');\n      var path = $element.data(PLUGIN_NAME + '-bg');\n\n      $element[PLUGIN_NAME](path, options);\n    });\n  });\n\n});\n"],"names":["factory","$","PLUGIN_NAME","DEFAULTS","volume","playbackRate","muted","loop","autoplay","position","posterType","resizing","bgColor","className","NOT_IMPLEMENTED_MSG","parseOptions","str","delimiterIndex","option","prop","val","arr","len","i","obj","replace","split","length","search","indexOf","substring","undefined","isNaN","Vide","element","path","options","$element","hasOwnProperty","settings","extend","init","e","message","prototype","$video","$wrapper","vide","poster","sources","parsePosition","arg","args","x","y","addClass","css","top","left","bottom","right","overflow","mp4","webm","ogv","prepend","defaultMuted","defaultPlaybackRate","Error","margin","transform","visibility","opacity","one","resize","on","append","getVideoObject","video","videoHeight","videoWidth","wrapperHeight","height","wrapperWidth","width","destroy","lookup","index","off","removeData","remove","fn","instance","each","data","push","document","ready","$window","window","find","define","amd","root","jQuery"],"version":3,"file":"index.959d3359.js.map"}