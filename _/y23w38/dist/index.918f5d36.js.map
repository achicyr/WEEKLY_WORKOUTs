{"mappings":"CCaE,AAbF;;;;;;;;CAQC,EAED,kDAAkD,EAClD,uBAAuB,EAErB,SAAU,CAAM,EAIlB,iEAAiE;AAEjE,SAAS,EAAU,CAAS,EAC1B,OAAO,AAAI,OAAO,WAAa,EAAY,WAC7C,CA+BA,SAAS,EAAa,CAAI,CAAE,CAAC,EAE3B,AADS,CAAA,EAAU,EAAM,GAAM,EAAc,CAA7C,EACI,EAAM,EACZ,CA5BK,cAAe,SAAS,eAAA,EAC3B,EAAW,SAAU,CAAI,CAAE,CAAC,EAC1B,OAAO,EAAK,SAAA,CAAU,QAAA,CAAU,EAClC,EACA,EAAW,SAAU,CAAI,CAAE,CAAC,EAC1B,EAAK,SAAA,CAAU,GAAA,CAAK,EACtB,EACA,EAAc,SAAU,CAAI,CAAE,CAAC,EAC7B,EAAK,SAAA,CAAU,MAAA,CAAQ,EACzB,IAGA,EAAW,SAAU,CAAI,CAAE,CAAC,EAC1B,OAAO,EAAU,GAAI,IAAA,CAAM,EAAK,SAAhC,CACF,EACA,EAAW,SAAU,CAAI,CAAE,CAAC,EACpB,EAAU,EAAM,IACpB,CAAA,EAAK,SAAA,CAAY,EAAK,SAAA,CAAY,IAAM,CAAA,CAE5C,EACA,EAAc,SAAU,CAAI,CAAE,CAAC,EAC7B,EAAK,SAAA,CAAY,EAAK,SAAA,CAAU,OAAA,CAAS,EAAU,GAAK,IAC1D,GAQF,IAhCI,EAAU,EAAU,EAgCpB,EAAU,CACZ,aAAa;AACb,SAAU,EACV,SAAU,EACV,YAAa,EACb,YAAa,EACb,cAAc;AACd,IAAK,EACL,IAAK,EACL,OAAQ,EACR,OAAQ,CACV,CAGK,AAAkB,CAAA,YAAlB,OAAO,QAAyB,OAAO,GAAA,CAE1C,OAAQ,GAGR,EAAO,OAAA,CAAU,CAGnB,EAAI,O,4D","sources":["<anon>","app/essence-free-ud/js/classie.js"],"sourcesContent":["/*!\n * classie - class helper functions\n * from bonzo https://github.com/ded/bonzo\n * \n * classie.has( elem, 'my-class' ) -> true/false\n * classie.add( elem, 'my-new-class' )\n * classie.remove( elem, 'my-unwanted-class' )\n * classie.toggle( elem, 'my-class' )\n */ /*jshint browser: true, strict: true, undef: true */ /*global define: false */ (function(window1) {\n    \"use strict\";\n    // class helper functions from bonzo https://github.com/ded/bonzo\n    function classReg(className) {\n        return new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\");\n    }\n    // classList support for class management\n    // altho to be fair, the api sucks because it won't accept multiple classes at once\n    var hasClass, addClass, removeClass;\n    if (\"classList\" in document.documentElement) {\n        hasClass = function(elem, c) {\n            return elem.classList.contains(c);\n        };\n        addClass = function(elem, c) {\n            elem.classList.add(c);\n        };\n        removeClass = function(elem, c) {\n            elem.classList.remove(c);\n        };\n    } else {\n        hasClass = function(elem, c) {\n            return classReg(c).test(elem.className);\n        };\n        addClass = function(elem, c) {\n            if (!hasClass(elem, c)) elem.className = elem.className + \" \" + c;\n        };\n        removeClass = function(elem, c) {\n            elem.className = elem.className.replace(classReg(c), \" \");\n        };\n    }\n    function toggleClass(elem, c) {\n        var fn = hasClass(elem, c) ? removeClass : addClass;\n        fn(elem, c);\n    }\n    var classie = {\n        // full names\n        hasClass: hasClass,\n        addClass: addClass,\n        removeClass: removeClass,\n        toggleClass: toggleClass,\n        // short names\n        has: hasClass,\n        add: addClass,\n        remove: removeClass,\n        toggle: toggleClass\n    };\n    // transport\n    if (typeof define === \"function\" && define.amd) // AMD\n    define(classie);\n    else // browser global\n    window1.classie = classie;\n})(window);\n\n//# sourceMappingURL=index.918f5d36.js.map\n","/*!\n * classie - class helper functions\n * from bonzo https://github.com/ded/bonzo\n * \n * classie.has( elem, 'my-class' ) -> true/false\n * classie.add( elem, 'my-new-class' )\n * classie.remove( elem, 'my-unwanted-class' )\n * classie.toggle( elem, 'my-class' )\n */\n\n/*jshint browser: true, strict: true, undef: true */\n/*global define: false */\n\n( function( window ) {\n\n'use strict';\n\n// class helper functions from bonzo https://github.com/ded/bonzo\n\nfunction classReg( className ) {\n  return new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\");\n}\n\n// classList support for class management\n// altho to be fair, the api sucks because it won't accept multiple classes at once\nvar hasClass, addClass, removeClass;\n\nif ( 'classList' in document.documentElement ) {\n  hasClass = function( elem, c ) {\n    return elem.classList.contains( c );\n  };\n  addClass = function( elem, c ) {\n    elem.classList.add( c );\n  };\n  removeClass = function( elem, c ) {\n    elem.classList.remove( c );\n  };\n}\nelse {\n  hasClass = function( elem, c ) {\n    return classReg( c ).test( elem.className );\n  };\n  addClass = function( elem, c ) {\n    if ( !hasClass( elem, c ) ) {\n      elem.className = elem.className + ' ' + c;\n    }\n  };\n  removeClass = function( elem, c ) {\n    elem.className = elem.className.replace( classReg( c ), ' ' );\n  };\n}\n\nfunction toggleClass( elem, c ) {\n  var fn = hasClass( elem, c ) ? removeClass : addClass;\n  fn( elem, c );\n}\n\nvar classie = {\n  // full names\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  // short names\n  has: hasClass,\n  add: addClass,\n  remove: removeClass,\n  toggle: toggleClass\n};\n\n// transport\nif ( typeof define === 'function' && define.amd ) {\n  // AMD\n  define( classie );\n} else {\n  // browser global\n  window.classie = classie;\n}\n\n})( window );\n"],"names":["window1","classReg","className","RegExp","toggleClass","elem","c","fn","hasClass","removeClass","addClass","document","documentElement","classList","contains","add","remove","test","replace","classie","has","toggle","define","amd","window"],"version":3,"file":"index.918f5d36.js.map"}