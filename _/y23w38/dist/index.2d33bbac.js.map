{"mappings":"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","sources":["<anon>","app/essence-free-ud/js/jquery.nav.js"],"sourcesContent":["var $14ccc0f01cd9fde2$exports = {};\n(function($, window1, document1, undefined) {\n    // our plugin constructor\n    var OnePageNav = function(elem, options) {\n        this.elem = elem;\n        this.$elem = $(elem);\n        this.options = options;\n        this.metadata = this.$elem.data(\"plugin-options\");\n        this.$win = $(window1);\n        this.sections = {};\n        this.didScroll = false;\n        this.$doc = $(document1);\n        this.docHeight = this.$doc.height();\n    };\n    // the plugin prototype\n    OnePageNav.prototype = {\n        defaults: {\n            navItems: \"a\",\n            currentClass: \"current\",\n            changeHash: false,\n            easing: \"swing\",\n            filter: \"\",\n            scrollSpeed: 750,\n            scrollThreshold: 0.5,\n            begin: false,\n            end: false,\n            scrollChange: false\n        },\n        init: function() {\n            // Introduce defaults that can be extended either\n            // globally or using an object literal.\n            this.config = $.extend({}, this.defaults, this.options, this.metadata);\n            this.$nav = this.$elem.find(this.config.navItems);\n            //Filter any links out of the nav\n            if (this.config.filter !== \"\") this.$nav = this.$nav.filter(this.config.filter);\n            //Handle clicks on the nav\n            this.$nav.on(\"click.onePageNav\", $.proxy(this.handleClick, this));\n            //Get the section positions\n            this.getPositions();\n            //Handle scroll changes\n            this.bindInterval();\n            //Update the positions on resize too\n            this.$win.on(\"resize.onePageNav\", $.proxy(this.getPositions, this));\n            return this;\n        },\n        adjustNav: function(self, $parent) {\n            self.$elem.find(\".\" + self.config.currentClass).removeClass(self.config.currentClass);\n            $parent.addClass(self.config.currentClass);\n        },\n        bindInterval: function() {\n            var self = this;\n            var docHeight;\n            self.$win.on(\"scroll.onePageNav\", function() {\n                self.didScroll = true;\n            });\n            self.t = setInterval(function() {\n                docHeight = self.$doc.height();\n                //If it was scrolled\n                if (self.didScroll) {\n                    self.didScroll = false;\n                    self.scrollChange();\n                }\n                //If the document height changes\n                if (docHeight !== self.docHeight) {\n                    self.docHeight = docHeight;\n                    self.getPositions();\n                }\n            }, 250);\n        },\n        getHash: function($link) {\n            return $link.attr(\"href\").split(\"#\")[1];\n        },\n        getPositions: function() {\n            var self = this;\n            var linkHref;\n            var topPos;\n            var $target;\n            self.$nav.each(function() {\n                linkHref = self.getHash($(this));\n                $target = $(\"#\" + linkHref);\n                if ($target.length) {\n                    topPos = $target.offset().top;\n                    self.sections[linkHref] = Math.round(topPos);\n                }\n            });\n        },\n        getSection: function(windowPos) {\n            var returnValue = null;\n            var windowHeight = Math.round(this.$win.height() * this.config.scrollThreshold);\n            for(var section in this.sections)if (this.sections[section] - windowHeight < windowPos) returnValue = section;\n            return returnValue;\n        },\n        handleClick: function(e) {\n            var self = this;\n            var $link = $(e.currentTarget);\n            var $parent = $link.parent();\n            var newLoc = \"#\" + self.getHash($link);\n            if (!$parent.hasClass(self.config.currentClass)) {\n                //Start callback\n                if (self.config.begin) self.config.begin();\n                //Change the highlighted nav item\n                self.adjustNav(self, $parent);\n                //Removing the auto-adjust on scroll\n                self.unbindInterval();\n                //Scroll to the correct position\n                self.scrollTo(newLoc, function() {\n                    //Do we need to change the hash?\n                    if (self.config.changeHash) window1.location.hash = newLoc;\n                    //Add the auto-adjust on scroll back in\n                    self.bindInterval();\n                    //End callback\n                    if (self.config.end) self.config.end();\n                });\n            }\n            e.preventDefault();\n        },\n        scrollChange: function() {\n            var windowTop = this.$win.scrollTop();\n            var position = this.getSection(windowTop);\n            var $parent;\n            //If the position is set\n            if (position !== null) {\n                $parent = this.$elem.find('a[href$=\"#' + position + '\"]').parent();\n                //If it's not already the current section\n                if (!$parent.hasClass(this.config.currentClass)) {\n                    //Change the highlighted nav item\n                    this.adjustNav(this, $parent);\n                    //If there is a scrollChange callback\n                    if (this.config.scrollChange) this.config.scrollChange($parent);\n                }\n            }\n        },\n        scrollTo: function(target, callback) {\n            var offset = $(target).offset().top;\n            $(\"html, body\").animate({\n                scrollTop: offset\n            }, this.config.scrollSpeed, this.config.easing, callback);\n        },\n        unbindInterval: function() {\n            clearInterval(this.t);\n            this.$win.unbind(\"scroll.onePageNav\");\n        }\n    };\n    OnePageNav.defaults = OnePageNav.prototype.defaults;\n    $.fn.onePageNav = function(options) {\n        return this.each(function() {\n            new OnePageNav(this, options).init();\n        });\n    };\n})(jQuery, window, document);\n\n\n//# sourceMappingURL=index.2d33bbac.js.map\n","/*\n * jQuery One Page Nav Plugin\n * http://github.com/davist11/jQuery-One-Page-Nav\n *\n * Copyright (c) 2010 Trevor Davis (http://trevordavis.net)\n * Dual licensed under the MIT and GPL licenses.\n * Uses the same license as jQuery, see:\n * http://jquery.org/license\n *\n * @version 3.0.0\n *\n * Example usage:\n * $('#nav').onePageNav({\n *   currentClass: 'current',\n *   changeHash: false,\n *   scrollSpeed: 750\n * });\n */\n\n;(function($, window, document, undefined){\n\n\t// our plugin constructor\n\tvar OnePageNav = function(elem, options){\n\t\tthis.elem = elem;\n\t\tthis.$elem = $(elem);\n\t\tthis.options = options;\n\t\tthis.metadata = this.$elem.data('plugin-options');\n\t\tthis.$win = $(window);\n\t\tthis.sections = {};\n\t\tthis.didScroll = false;\n\t\tthis.$doc = $(document);\n\t\tthis.docHeight = this.$doc.height();\n\t};\n\n\t// the plugin prototype\n\tOnePageNav.prototype = {\n\t\tdefaults: {\n\t\t\tnavItems: 'a',\n\t\t\tcurrentClass: 'current',\n\t\t\tchangeHash: false,\n\t\t\teasing: 'swing',\n\t\t\tfilter: '',\n\t\t\tscrollSpeed: 750,\n\t\t\tscrollThreshold: 0.5,\n\t\t\tbegin: false,\n\t\t\tend: false,\n\t\t\tscrollChange: false\n\t\t},\n\n\t\tinit: function() {\n\t\t\t// Introduce defaults that can be extended either\n\t\t\t// globally or using an object literal.\n\t\t\tthis.config = $.extend({}, this.defaults, this.options, this.metadata);\n\n\t\t\tthis.$nav = this.$elem.find(this.config.navItems);\n\n\t\t\t//Filter any links out of the nav\n\t\t\tif(this.config.filter !== '') {\n\t\t\t\tthis.$nav = this.$nav.filter(this.config.filter);\n\t\t\t}\n\n\t\t\t//Handle clicks on the nav\n\t\t\tthis.$nav.on('click.onePageNav', $.proxy(this.handleClick, this));\n\n\t\t\t//Get the section positions\n\t\t\tthis.getPositions();\n\n\t\t\t//Handle scroll changes\n\t\t\tthis.bindInterval();\n\n\t\t\t//Update the positions on resize too\n\t\t\tthis.$win.on('resize.onePageNav', $.proxy(this.getPositions, this));\n\n\t\t\treturn this;\n\t\t},\n\n\t\tadjustNav: function(self, $parent) {\n\t\t\tself.$elem.find('.' + self.config.currentClass).removeClass(self.config.currentClass);\n\t\t\t$parent.addClass(self.config.currentClass);\n\t\t},\n\n\t\tbindInterval: function() {\n\t\t\tvar self = this;\n\t\t\tvar docHeight;\n\n\t\t\tself.$win.on('scroll.onePageNav', function() {\n\t\t\t\tself.didScroll = true;\n\t\t\t});\n\n\t\t\tself.t = setInterval(function() {\n\t\t\t\tdocHeight = self.$doc.height();\n\n\t\t\t\t//If it was scrolled\n\t\t\t\tif(self.didScroll) {\n\t\t\t\t\tself.didScroll = false;\n\t\t\t\t\tself.scrollChange();\n\t\t\t\t}\n\n\t\t\t\t//If the document height changes\n\t\t\t\tif(docHeight !== self.docHeight) {\n\t\t\t\t\tself.docHeight = docHeight;\n\t\t\t\t\tself.getPositions();\n\t\t\t\t}\n\t\t\t}, 250);\n\t\t},\n\n\t\tgetHash: function($link) {\n\t\t\treturn $link.attr('href').split('#')[1];\n\t\t},\n\n\t\tgetPositions: function() {\n\t\t\tvar self = this;\n\t\t\tvar linkHref;\n\t\t\tvar topPos;\n\t\t\tvar $target;\n\n\t\t\tself.$nav.each(function() {\n\t\t\t\tlinkHref = self.getHash($(this));\n\t\t\t\t$target = $('#' + linkHref);\n\n\t\t\t\tif($target.length) {\n\t\t\t\t\ttopPos = $target.offset().top;\n\t\t\t\t\tself.sections[linkHref] = Math.round(topPos);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tgetSection: function(windowPos) {\n\t\t\tvar returnValue = null;\n\t\t\tvar windowHeight = Math.round(this.$win.height() * this.config.scrollThreshold);\n\n\t\t\tfor(var section in this.sections) {\n\t\t\t\tif((this.sections[section] - windowHeight) < windowPos) {\n\t\t\t\t\treturnValue = section;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn returnValue;\n\t\t},\n\n\t\thandleClick: function(e) {\n\t\t\tvar self = this;\n\t\t\tvar $link = $(e.currentTarget);\n\t\t\tvar $parent = $link.parent();\n\t\t\tvar newLoc = '#' + self.getHash($link);\n\n\t\t\tif(!$parent.hasClass(self.config.currentClass)) {\n\t\t\t\t//Start callback\n\t\t\t\tif(self.config.begin) {\n\t\t\t\t\tself.config.begin();\n\t\t\t\t}\n\n\t\t\t\t//Change the highlighted nav item\n\t\t\t\tself.adjustNav(self, $parent);\n\n\t\t\t\t//Removing the auto-adjust on scroll\n\t\t\t\tself.unbindInterval();\n\n\t\t\t\t//Scroll to the correct position\n\t\t\t\tself.scrollTo(newLoc, function() {\n\t\t\t\t\t//Do we need to change the hash?\n\t\t\t\t\tif(self.config.changeHash) {\n\t\t\t\t\t\twindow.location.hash = newLoc;\n\t\t\t\t\t}\n\n\t\t\t\t\t//Add the auto-adjust on scroll back in\n\t\t\t\t\tself.bindInterval();\n\n\t\t\t\t\t//End callback\n\t\t\t\t\tif(self.config.end) {\n\t\t\t\t\t\tself.config.end();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\te.preventDefault();\n\t\t},\n\n\t\tscrollChange: function() {\n\t\t\tvar windowTop = this.$win.scrollTop();\n\t\t\tvar position = this.getSection(windowTop);\n\t\t\tvar $parent;\n\n\t\t\t//If the position is set\n\t\t\tif(position !== null) {\n\t\t\t\t$parent = this.$elem.find('a[href$=\"#' + position + '\"]').parent();\n\n\t\t\t\t//If it's not already the current section\n\t\t\t\tif(!$parent.hasClass(this.config.currentClass)) {\n\t\t\t\t\t//Change the highlighted nav item\n\t\t\t\t\tthis.adjustNav(this, $parent);\n\n\t\t\t\t\t//If there is a scrollChange callback\n\t\t\t\t\tif(this.config.scrollChange) {\n\t\t\t\t\t\tthis.config.scrollChange($parent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tscrollTo: function(target, callback) {\n\t\t\tvar offset = $(target).offset().top;\n\n\t\t\t$('html, body').animate({\n\t\t\t\tscrollTop: offset\n\t\t\t}, this.config.scrollSpeed, this.config.easing, callback);\n\t\t},\n\n\t\tunbindInterval: function() {\n\t\t\tclearInterval(this.t);\n\t\t\tthis.$win.unbind('scroll.onePageNav');\n\t\t}\n\t};\n\n\tOnePageNav.defaults = OnePageNav.prototype.defaults;\n\n\t$.fn.onePageNav = function(options) {\n\t\treturn this.each(function() {\n\t\t\tnew OnePageNav(this, options).init();\n\t\t});\n\t};\n\n})( jQuery, window , document );"],"names":["$","window1","document1","OnePageNav","jQuery","window","document","elem","options","$elem","metadata","data","$win","sections","didScroll","$doc","docHeight","height","prototype","defaults","navItems","currentClass","changeHash","easing","filter","scrollSpeed","scrollThreshold","begin","end","scrollChange","init","config","extend","$nav","find","on","proxy","handleClick","getPositions","bindInterval","adjustNav","self","$parent","removeClass","addClass","t","setInterval","getHash","$link","attr","split","linkHref","topPos","$target","each","length","offset","top","Math","round","getSection","windowPos","returnValue","windowHeight","section","e","currentTarget","parent","newLoc","hasClass","unbindInterval","scrollTo","location","hash","preventDefault","windowTop","scrollTop","position","target","callback","animate","clearInterval","unbind","fn","onePageNav"],"version":3,"file":"index.2d33bbac.js.map"}